#BlueJ class context
comment0.target=Raumverwaltung
comment0.text=\r\n\ Die\ Raumverwaltung\ erzeugt\ und\ verwaltet\ die\ Objekte\ der\ Klasse\ \u201ERaum\u201C\ auf\ Basis\ der\ Planungsdatei\ der\ R\u00E4ume\ f\u00FCr\ die\ jeweiligen\ Ausstellungszeitr\u00E4ume.\ \r\n\ Dadurch\ ist\ f\u00FCr\ jeden\ einzelnen\ Ausstellungszeitraum\ die\ Erstellung\ der\ dann\ gegebenen\ R\u00E4ume\ und\ deren\ Di-mensionen\ m\u00F6glich.\r\n\ \r\n\ @author\ Johannes\ Riedmeier\ \r\n\ @version\ (eine\ Versionsnummer\ oder\ ein\ Datum)\r\n
comment1.params=
comment1.target=Raumverwaltung()
comment1.text=\r\n\ Konstruktor\ f\u00FCr\ Objekte\ der\ Klasse\ Raumverwaltung\r\n
comment2.params=raum
comment2.target=void\ addRaum(Raum)
comment2.text=\r\n\ Es\ braucht\ eine\ Methode,\ um\ an\ die\ bestehende\ Liste\ der\ R\u00E4ume\ einen\ neuen\ Raum\ anzuh\u00E4ngen\ (z.B.\ aus\ der\ Eingabedatei)\r\n\ \r\n\ @param\ \ raum\ \ \ \ es\ muss\ ein\ Objekt\ des\ Typs\ Raum\ \u00FCbergeben\ werden,\ welcher\ an\ Liste\ angehangen\ wird\r\n\ \r\n
comment3.params=id
comment3.target=Raum\ getRaumByID(int)
comment3.text=\r\n\ Es\ braucht\ eine\ Methode,\ um\ auf\ einen\ bestimmten\ Raum\ der\ Liste\ zugreifen\ zu\ k\u00F6nnen\ \r\n\ \r\n\ @param\ \ id\ \ \ \ die\ ID\ (lfd.\ Nummer)\ muss\ eingegeben\ werden\r\n\ @return\ es\ wird\ ein\ Objekt\ Raum\ zur\u00FCckgegeben\r\n
comment4.params=
comment4.target=java.util.ArrayList\ getRaeume()
comment4.text=\r\n\ Es\ braucht\ eine\ Methode,\ um\ die\ gesamte\ Liste\ der\ R\u00E4ume\ zur\u00FCckzugeben\r\n\ \r\n\ \r\n\ @return\ es\ wird\ ein\ Objekt\ Raum\ zur\u00FCckgegeben\r\n
numComments=5
